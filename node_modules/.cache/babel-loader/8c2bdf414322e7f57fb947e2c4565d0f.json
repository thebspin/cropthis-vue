{"remainingRequest":"/home/yungod/Desktop/cropthis/node_modules/babel-loader/lib/index.js!/home/yungod/Desktop/cropthis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yungod/Desktop/cropthis/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yungod/Desktop/cropthis/src/components/ImageCropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yungod/Desktop/cropthis/src/components/ImageCropper.vue","mtime":1584721182867},{"path":"/home/yungod/Desktop/cropthis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yungod/Desktop/cropthis/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yungod/Desktop/cropthis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yungod/Desktop/cropthis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENyb3BwZXIgZnJvbSAnY3JvcHBlcmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJbWFnZUNyb3BwZXInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjcm9wcGVyOiBudWxsLAogICAgICBkZXN0aW5hdGlvbjogbnVsbCwKICAgICAgaW1hZ2U6IG51bGwsCiAgICAgIHNvdXJjZTogcmVxdWlyZSgnLi4vLi4vcHVibGljL2xvZ28ucG5nJykKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjcm9wSW1hZ2U6IGZ1bmN0aW9uIGNyb3BJbWFnZShldmVudCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5zb3VyY2UgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGV2ZW50LnRhcmdldC5maWxlc1swXSk7CiAgICAgIHRoaXMuaW1hZ2UgPSB0aGlzLiRyZWZzLmltYWdlOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmltYWdlLCB0aGlzLnNvdXJjZSk7CiAgICAgIHRoaXMuY3JvcHBlciA9IG5ldyBDcm9wcGVyKHRoaXMuaW1hZ2UsIHsKICAgICAgICB6b29tYWJsZTogZmFsc2UsCiAgICAgICAgc2NhbGFibGU6IGZhbHNlLAogICAgICAgIGJhY2tncm91bmQ6IGZhbHNlLAogICAgICAgIGFzcGVjdFJhdGlvOiAwLAogICAgICAgIGNyb3A6IGZ1bmN0aW9uIGNyb3AoKSB7CiAgICAgICAgICB2YXIgY2FudmFzID0gX3RoaXMuY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKCk7CgogICAgICAgICAgX3RoaXMuZGVzdGluYXRpb24gPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ImageCropper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAaA,OAAA,OAAA,MAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,OAAA,CAAA,uBAAA;AAJA,KAAA;AAMA,GAVA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,KAAA,EAAA;AAAA;;AACA,WAAA,MAAA,GAAA,GAAA,CAAA,eAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA,EAAA,KAAA,MAAA;AACA,WAAA,OAAA,GAAA,IAAA,OAAA,CAAA,KAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,UAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA,CAJA;AAKA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,MAAA,GAAA,KAAA,CAAA,OAAA,CAAA,gBAAA,EAAA;;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA;AACA;AARA,OAAA,CAAA;AAUA;AAfA;AAZA,CAAA","sourcesContent":["<template>\n\t<div>\n\t\t<input type=\"file\" @change=\"cropImage\">\n\t\t<div>\n\t\t\t<div class=\"img-container\">\n\t\t\t\t<img ref=\"image\" :src=\"source\">\n\t\t\t</div>\n\t\t\t<img :src=\"destination\" class=\"img-preview\">\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Cropper from 'cropperjs'\n\nexport default {\n\tname: 'ImageCropper',\n\n\tdata: function() {\n\t\treturn {\n\t\t\tcropper: null,\n\t\t\tdestination: null,\n\t\t\timage: null,\n\t\t\tsource: require('../../public/logo.png') \n\t\t}\n\t},\n\n\tmethods: {\n\t\tcropImage: function(event) {\n\t\t\tthis.source = URL.createObjectURL(event.target.files[0])\n\t\t\tthis.image = this.$refs.image\n\t\t\tconsole.log(this.image, this.source)\n\t\t\tthis.cropper = new Cropper(this.image, {\n\t\t\t\tzoomable: false,\n\t\t\t\tscalable: false,\n\t\t\t\tbackground: false,\n\t\t\t\taspectRatio: 0,\n\t\t\t\tcrop: () => {\n\t\t\t\t\tconst canvas = this.cropper.getCroppedCanvas()\n\t\t\t\t\tthis.destination = canvas.toDataURL(\"image/png\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\t\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\t.img-container {\n\t\twidth: 640px;\n\t\theight: 480px;\n\t}\n\n\timg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: contain;\n\t}\n\n\t.img-preview { \n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n</style>\n"],"sourceRoot":"src/components"}]}